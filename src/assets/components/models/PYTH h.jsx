/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 PYTH h.glb 
*/

import React, { useRef } from 'react'
import { OrbitControls, useAnimations, useGLTF } from '@react-three/drei'
import { Canvas } from '@react-three/fiber'

function Model(props) {
  const group =useRef()
  const { nodes, materials,animations } = useGLTF('/PYTH h.glb')
  const{actions,names}= useAnimations(animations,group)
  console.log(names,actions)
  return (
    <group {...props} dispose={null}>
      <mesh name="Plane001" geometry={nodes.Plane001.geometry} material={materials['Material.001']} morphTargetDictionary={nodes.Plane001.morphTargetDictionary} morphTargetInfluences={nodes.Plane001.morphTargetInfluences} />
      <mesh name="Plane001_1" geometry={nodes.Plane001_1.geometry} material={materials['Material.002']} morphTargetDictionary={nodes.Plane001_1.morphTargetDictionary} morphTargetInfluences={nodes.Plane001_1.morphTargetInfluences} />
      <mesh name="Plane001_2" geometry={nodes.Plane001_2.geometry} material={materials['Material.003']} morphTargetDictionary={nodes.Plane001_2.morphTargetDictionary} morphTargetInfluences={nodes.Plane001_2.morphTargetInfluences} />
      <mesh name="Plane001_3" geometry={nodes.Plane001_3.geometry} material={materials['Material.004']} morphTargetDictionary={nodes.Plane001_3.morphTargetDictionary} morphTargetInfluences={nodes.Plane001_3.morphTargetInfluences} />
      <mesh name="Plane001_4" geometry={nodes.Plane001_4.geometry} material={materials['Material.005']} morphTargetDictionary={nodes.Plane001_4.morphTargetDictionary} morphTargetInfluences={nodes.Plane001_4.morphTargetInfluences} />
    </group>
  )
}

useGLTF.preload('/PYTH h.glb')

export default function Pytha() {
  return (
    <Canvas camera={{ position: [0, 10, 0], fov: 50 }}>
      <ambientLight intensity={0.5} />
      <directionalLight position={[5, 5, 5]} intensity={1} />
      <Model/>
      <OrbitControls />
    </Canvas>
  );
}